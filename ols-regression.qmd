# OLS Regression

```{r, echo=FALSE}
library(wooldridge)
data("hprice2")
```

We will start with a simple regression relating logarithmic house prices with crime. Below, we will name and store this regression as `model_1`. Note that you may provide any name as you wish, as long as it does not clash with the naming conventions. For example, while `model_1` is OK, `1_model` is not possible.

```{r}
# Regression
model_1 <- lm(lprice ~ crime, data = hprice2)
summary(model_1)

```

-   The R function we use for linear regression is `lm`, which stands for *linear model*.

-   The regression equation we are estimating is given by `lprice ~ crime`, where `price` is approximated by `crime`.

-   `data = hprice2` refers to the hprice2 data we are using

-   `summary(model_1)` is a separate line of command, which asks R to provide the summary estimation results.

We may add another independent variable in the model by using a `+` sign. This time it is saved under name `model_2`.

```{r}

model_2 <- lm(lprice ~ crime + nox, data = hprice2)
summary(model_2)
```

Let us add two mode independent variables under name `model_3`:

```{r}
model_3 <- lm(lprice ~ crime + nox + stratio + rooms, 
              data = hprice2)
summary(model_3)

```

We may want to save the residuals or predictions after estimating an OLS model.

-   Use `predict()` to store the predictions for the dependent variable.

Can you tell the difference between the two lines below?

```{r}

price_hat <- predict(model_3)

hprice2$lprice_hat <- predict(model_3)
```

In the first one predictions are saved under a separate object of its own while the second line saves these as a variable in our `hprice2` data.

-   Use `rediduals` to store the residuals of the model.

```{r}

# Saving residuals of model_3
resid_3 <- residuals(model_3)

```

Let us view the newly created `lprice_hat` variable. We can do this by viewing the whole data set:

```{r}

# View the newly created predicted price variable - whole data
#View(hprice2)
```

It is difficult to compare the actual and predicted value columns above. We may ask R to view only a selection of variable rather than the full data.

```{r}
# Create a subset of variables and then view them
subset <- hprice2[, c("lprice", "lprice_hat")]
#View(subset)

# Combining the two lines under one 
#View(hprice2[, c("lprice", "lprice_hat")])

```

Finally, we may use a summary table to present results of the three models together. We use the `stargazer` package for that.

```{r}
#install.packages("stargazer")
library(stargazer)

# Summarising the three model estimates under one table
stargazer(model_1, model_2, model_3, type = "text")

```
